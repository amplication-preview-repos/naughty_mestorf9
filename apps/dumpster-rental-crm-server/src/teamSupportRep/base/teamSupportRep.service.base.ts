/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  TeamSupportRep as PrismaTeamSupportRep,
  Quote as PrismaQuote,
} from "@prisma/client";

export class TeamSupportRepServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.TeamSupportRepCountArgs, "select">
  ): Promise<number> {
    return this.prisma.teamSupportRep.count(args);
  }

  async teamSupportReps(
    args: Prisma.TeamSupportRepFindManyArgs
  ): Promise<PrismaTeamSupportRep[]> {
    return this.prisma.teamSupportRep.findMany(args);
  }
  async teamSupportRep(
    args: Prisma.TeamSupportRepFindUniqueArgs
  ): Promise<PrismaTeamSupportRep | null> {
    return this.prisma.teamSupportRep.findUnique(args);
  }
  async createTeamSupportRep(
    args: Prisma.TeamSupportRepCreateArgs
  ): Promise<PrismaTeamSupportRep> {
    return this.prisma.teamSupportRep.create(args);
  }
  async updateTeamSupportRep(
    args: Prisma.TeamSupportRepUpdateArgs
  ): Promise<PrismaTeamSupportRep> {
    return this.prisma.teamSupportRep.update(args);
  }
  async deleteTeamSupportRep(
    args: Prisma.TeamSupportRepDeleteArgs
  ): Promise<PrismaTeamSupportRep> {
    return this.prisma.teamSupportRep.delete(args);
  }

  async findQuotes(
    parentId: string,
    args: Prisma.QuoteFindManyArgs
  ): Promise<PrismaQuote[]> {
    return this.prisma.teamSupportRep
      .findUniqueOrThrow({
        where: { id: parentId },
      })
      .quotes(args);
  }
}
